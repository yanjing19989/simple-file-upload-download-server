name: Build and Release

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        include:
          - os: ubuntu-latest
            platform: linux
            archive_ext: tar.gz
            archive_cmd: tar -czf
          - os: windows-latest
            platform: windows
            archive_ext: zip
            archive_cmd: 7z a

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'

    - name: Install requirements
      run: pip install pyinstaller qrcode

    - name: Test application
      run: |
        python file.py --help
        echo "test content" > test.txt
        python -c "
        import os, json
        from file import UploadHTTPRequestHandler
        print('Application imports successfully')
        if os.path.exists('static/index.html'):
            print('Static files found')
        if os.path.exists('classic.html'):
            print('Classic HTML found')
        # Test that we can create the server class
        handler = UploadHTTPRequestHandler
        print('Server handler class created successfully')
        "
        rm test.txt
      shell: bash

    - name: Build with PyInstaller
      run: |
        pyinstaller --clean -D file.py -n SFS
        echo "Verifying build outputs..."
        ls -la dist/
        if [ "${{ matrix.platform }}" = "windows" ]; then
          test -f "dist/SFS/SFS.exe" || exit 1
        else
          test -f "dist/SFS/SFS" || exit 1
        fi
        echo "Build verification completed successfully"
      shell: bash

    - name: Copy static files to exe directory
      run: |
        echo "Copying static files and classic.html to exe directory..."
        # Copy static folder and classic.html to the directory build location
        cp -r static dist/SFS/
        cp classic.html dist/SFS/
        
        echo "Static files copied successfully"
        echo "Directory structure after copying:"
        ls -la dist/SFS/
      shell: bash

    - name: Create directory archive
      run: |
        cd dist
        ${{ matrix.archive_cmd }} SFS-${{ matrix.platform }}.${{ matrix.archive_ext }} SFS
      shell: bash

    - name: Upload directory build
      uses: actions/upload-artifact@v4
      with:
        name: SFS-${{ matrix.platform }}
        path: dist/SFS-${{ matrix.platform }}.${{ matrix.archive_ext }}

    - name: Test built executables
      run: |
        cd dist
        echo "Testing directory build..."
        if [ "${{ matrix.platform }}" = "windows" ]; then
          ./SFS/SFS.exe --help || echo "Directory build help test completed"
        else
          ./SFS/SFS --help || echo "Directory build help test completed"
        fi
        
        echo "Verifying static files are present..."
        test -d "SFS/static" || echo "Warning: static directory not found in directory build"
        test -f "SFS/classic.html" || echo "Warning: classic.html not found in directory build"
      shell: bash

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          SFS-linux/*
          SFS-windows/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}